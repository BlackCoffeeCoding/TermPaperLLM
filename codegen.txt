from transformers import AutoTokenizer, AutoModelForCausalLM
import torch

class TransformersLLMClient:
    def __init__(self, model_name="Salesforce/codegen-350M-mono"):
        print(f"Загружаем модель {model_name} с Hugging Face...")
        self.tokenizer = AutoTokenizer.from_pretrained(model_name)
        self.model = AutoModelForCausalLM.from_pretrained(
            model_name,
            torch_dtype=torch.float16 if torch.cuda.is_available() else torch.float32,
            device_map="auto" if torch.cuda.is_available() else None
        )
        self.reset_history()  # Инициализируем историю с системным сообщением

    def ask(self, user_message: str) -> str:
        self.history.append({"role": "user", "content": user_message})
        prompt = "\n".join([f"{m['role']}: {m['content']}" for m in self.history]) + "\nassistant:"

        inputs = self.tokenizer(prompt, return_tensors="pt").to(self.model.device)

        outputs = self.model.generate(
            **inputs,
            max_new_tokens=512,
            do_sample=True,
            temperature=0.7,
            top_p=0.9,
            pad_token_id=self.tokenizer.eos_token_id
        )
        response = self.tokenizer.decode(outputs[0], skip_special_tokens=True)
        answer = response.split("assistant:")[-1].strip()
        self.history.append({"role": "assistant", "content": answer})

        return answer

    def reset_history(self):
        # Добавляем системное сообщение в начало истории для контекста
        self.history = [{"role": "system", "content": "Ты — ассистент для помощи программисту."}]
