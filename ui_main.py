import sys
from PyQt6.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QTextEdit, QLineEdit, QLabel, QMessageBox, QDialog
)
from gigachat_api import GigaChatClient
from local_llm import TransformersLLMClient

# –ò–º–ø–æ—Ä—Ç matplotlib –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure
import numpy as np


class StatsWindow(QDialog):
    def __init__(self, ratings_giga, ratings_local):
        super().__init__()
        self.setWindowTitle("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ü–µ–Ω–æ–∫")
        self.resize(900, 400)

        layout = QVBoxLayout(self)

        # –ü–æ–¥—Å—á—ë—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
        avg_giga = np.mean(ratings_giga) if ratings_giga else 0
        avg_local = np.mean(ratings_local) if ratings_local else 0

        label_giga = QLabel(f"–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª GigaChat: {avg_giga:.2f} —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø–æ {len(ratings_giga)} –æ—Ü–µ–Ω–∫–∞–º")
        label_local = QLabel(f"–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –õ–æ–∫–∞–ª—å–Ω–æ–π LLM: {avg_local:.2f} —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –ø–æ {len(ratings_local)} –æ—Ü–µ–Ω–∫–∞–º")

        layout.addWidget(label_giga)
        layout.addWidget(label_local)

        # –°–æ–∑–¥–∞—ë–º —Ñ–∏–≥—É—Ä—É –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
        fig = Figure(figsize=(5, 3))
        canvas = FigureCanvas(fig)
        layout.addWidget(canvas)

        ax1 = fig.add_subplot(121)
        ax2 = fig.add_subplot(122)

        # –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è GigaChat
        if ratings_giga:
            bins = np.arange(1, 7) - 0.5  # –¥–ª—è —á–∏—Å–µ–ª 1-5 –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å—Ç–æ–ª–±—Ü–∞
            ax1.hist(ratings_giga, bins=bins, rwidth=0.8, color='blue')
            ax1.set_xticks(range(1, 6))
            ax1.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ GigaChat")
            ax1.set_xlabel("–û—Ü–µ–Ω–∫–∞")
            ax1.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤")
        else:
            ax1.text(0.5, 0.5, "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ GigaChat", ha='center', va='center')

        # –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –¥–ª—è Local LLM
        if ratings_local:
            bins = np.arange(1, 7) - 0.5
            ax2.hist(ratings_local, bins=bins, rwidth=0.8, color='green')
            ax2.set_xticks(range(1, 6))
            ax2.set_title("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –õ–æ–∫–∞–ª—å–Ω–æ–π LLM")
            ax2.set_xlabel("–û—Ü–µ–Ω–∫–∞")
            ax2.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤")
        else:
            ax2.text(0.5, 0.5, "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ –õ–æ–∫–∞–ª—å–Ω–æ–π LLM", ha='center', va='center')

        fig.tight_layout()


class MainWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("LLM –î–∏–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        self.resize(700, 600)

        # –ò—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤
        self.history_gigachat = []
        self.history_local = []
        self.history_compare = []
        self.history_compare_gigachat = []
        self.history_compare_local = []

        # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ (—Å–ø–∏—Å–∫–∏)
        self.ratings_giga = []
        self.ratings_local = []

        self.current_mode = None

        self.gigachat_client = GigaChatClient("YTBiYjgwNmYtMmUxZi00ODVhLTg0YjQtYjAzN2U5OWI5Njc4OmZkMjUzODUzLTlkNGItNDYzNy05NDU3LTJiNmExYmFkNDZiNQ==")

        self.local_llm_client = TransformersLLMClient()

        self.layout = QVBoxLayout(self)

        self.label_mode = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏ –Ω–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥")
        self.layout.addWidget(self.label_mode)

        self.btn_gigachat = QPushButton("–î–∏–∞–ª–æ–≥ —Å GigaChat (—Å–µ—Ä–≤–µ—Ä)")
        self.btn_local = QPushButton("–î–∏–∞–ª–æ–≥ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π LLM")
        self.btn_compare = QPushButton("–î–∏–∞–ª–æ–≥ —Å –¥–≤—É–º—è –º–æ–¥–µ–ª—è–º–∏")

        self.layout.addWidget(self.btn_gigachat)
        self.layout.addWidget(self.btn_local)
        self.layout.addWidget(self.btn_compare)

        self.chat_output = QTextEdit()
        self.chat_output.setReadOnly(True)
        self.layout.addWidget(self.chat_output)

        self.input_field = QLineEdit()
        self.input_field.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∑–¥–µ—Å—å...")
        self.layout.addWidget(self.input_field)

        self.btn_send = QPushButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")
        self.layout.addWidget(self.btn_send)

        self.btn_end = QPushButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥")
        self.layout.addWidget(self.btn_end)

        # –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.btn_show_stats = QPushButton("–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ü–µ–Ω–æ–∫")
        self.layout.addWidget(self.btn_show_stats)
        self.btn_show_stats.setEnabled(False)  # –≤–∫–ª—é—á–∏–º –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –æ—Ü–µ–Ω–∫–∏

        # –í–∏–¥–∂–µ—Ç—ã –æ—Ü–µ–Ω–∫–∏ –¥–ª—è GigaChat –∏ –ª–æ–∫–∞–ª—å–Ω–æ–π LLM
        self.rating_label_giga = QLabel("–û—Ü–µ–Ω–∏—Ç–µ –æ—Ç–≤–µ—Ç GigaChat (1‚Äì5):")
        self.rating_label_local = QLabel("–û—Ü–µ–Ω–∏—Ç–µ –æ—Ç–≤–µ—Ç –õ–æ–∫–∞–ª—å–Ω–æ–π LLM (1‚Äì5):")

        self.rating_widget_giga = QWidget()
        self.rating_layout_giga = QHBoxLayout(self.rating_widget_giga)
        self.rating_buttons_giga = []
        for i in range(1, 6):
            btn = QPushButton(str(i))
            btn.clicked.connect(lambda _, rating=i: self.handle_rating("gigachat", rating))
            self.rating_buttons_giga.append(btn)
            self.rating_layout_giga.addWidget(btn)
        self.rating_widget_giga.hide()

        self.rating_widget_local = QWidget()
        self.rating_layout_local = QHBoxLayout(self.rating_widget_local)
        self.rating_buttons_local = []
        for i in range(1, 6):
            btn = QPushButton(str(i))
            btn.clicked.connect(lambda _, rating=i: self.handle_rating("local", rating))
            self.rating_buttons_local.append(btn)
            self.rating_layout_local.addWidget(btn)
        self.rating_widget_local.hide()

        self.layout.addWidget(self.rating_label_giga)
        self.layout.addWidget(self.rating_widget_giga)
        self.layout.addWidget(self.rating_label_local)
        self.layout.addWidget(self.rating_widget_local)

        self.rating_label_giga.hide()
        self.rating_label_local.hide()

        # –°–∏–≥–Ω–∞–ª—ã
        self.btn_gigachat.clicked.connect(self.start_gigachat)
        self.btn_local.clicked.connect(self.start_local)
        self.btn_compare.clicked.connect(self.start_compare)
        self.btn_send.clicked.connect(self.handle_input)
        self.btn_end.clicked.connect(self.end_dialog)
        self.btn_show_stats.clicked.connect(self.show_statistics_window)

        # –§–ª–∞–≥–∏ –æ—Ü–µ–Ω–∫–∏
        self.rating_giga_rated = False
        self.rating_local_rated = False

    def start_gigachat(self):
        self.current_mode = "gigachat"
        self.label_mode.setText("–†–µ–∂–∏–º: –î–∏–∞–ª–æ–≥ —Å GigaChat (—Å–µ—Ä–≤–µ—Ä)")
        self.load_history()
        self.append_to_history("–ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å GigaChat.\n", mode="gigachat")
        self.hide_rating_widgets()
        self.btn_show_stats.setEnabled(False)

    def start_local(self):
        self.current_mode = "local"
        self.label_mode.setText("–†–µ–∂–∏–º: –î–∏–∞–ª–æ–≥ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π LLM")
        self.load_history()
        self.append_to_history("–ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª—å—é.\n", mode="local")
        self.local_llm_client.reset_history()
        self.hide_rating_widgets()
        self.btn_show_stats.setEnabled(False)

    def start_compare(self):
        self.current_mode = "compare"
        self.label_mode.setText("–†–µ–∂–∏–º: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤ –¥–≤—É—Ö –º–æ–¥–µ–ª–µ–π")
        self.load_history()
        self.append_to_history("–ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å –¥–≤—É–º—è –º–æ–¥–µ–ª—è–º–∏.\n", mode="compare")
        self.local_llm_client.reset_history()
        self.hide_rating_widgets()
        self.rating_giga_rated = False
        self.rating_local_rated = False
        self.btn_show_stats.setEnabled(bool(self.ratings_giga or self.ratings_local))

    def load_history(self):
        self.chat_output.clear()
        if self.current_mode == "gigachat":
            for line in self.history_gigachat:
                self.chat_output.append(line)
        elif self.current_mode == "local":
            for line in self.history_local:
                self.chat_output.append(line)
        elif self.current_mode == "compare":
            for line in self.history_compare:
                self.chat_output.append(line)

    def append_to_history(self, text: str, mode: str):
        self.chat_output.append(text)
        if mode == "gigachat":
            self.history_gigachat.append(text)
        elif mode == "local":
            self.history_local.append(text)
        elif mode == "compare":
            self.history_compare.append(text)

    def handle_input(self):
        if self.current_mode is None:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã!")
            return

        user_text = self.input_field.text().strip()
        if not user_text:
            return

        self.input_field.clear()

        if self.current_mode == "gigachat":
            self.append_to_history(f"üßë‚Äçüíª –í—ã: {user_text}", mode="gigachat")
            messages = [{"role": "system", "content": "–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ Spring Boot. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."}]
            for entry in self.history_gigachat:
                if entry.startswith("üßë‚Äçüíª –í—ã: "):
                    messages.append({"role": "user", "content": entry[8:]})
                elif entry.startswith("ü§ñ GigaChat: "):
                    messages.append({"role": "assistant", "content": entry[13:]})
            try:
                response = self.gigachat_client.ask(messages)
                self.append_to_history(f"ü§ñ GigaChat: {response}", mode="gigachat")
            except Exception as e:
                self.append_to_history(f"‚ùå –û—à–∏–±–∫–∞: {e}", mode="gigachat")
            self.hide_rating_widgets()

        elif self.current_mode == "local":
            self.append_to_history(f"üßë‚Äçüíª –í—ã: {user_text}", mode="local")
            try:
                response = self.local_llm_client.ask(user_text)
                self.append_to_history(f"ü§ñ –õ–æ–∫–∞–ª—å–Ω–∞—è LLM: {response}", mode="local")
            except Exception as e:
                self.append_to_history(f"‚ùå –û—à–∏–±–∫–∞: {e}", mode="local")
            self.hide_rating_widgets()

        elif self.current_mode == "compare":
            self.append_to_history(f"üßë‚Äçüíª –í—ã: {user_text}", mode="compare")
            self.history_compare_gigachat.append({"role": "user", "content": user_text})
            messages_giga = [{"role": "system", "content": "–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–º–æ—â–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ Spring Boot. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."}] + self.history_compare_gigachat
            try:
                response_giga = self.gigachat_client.ask(messages_giga)
                self.history_compare_gigachat.append({"role": "assistant", "content": response_giga})
            except Exception as e:
                response_giga = f"‚ùå –û—à–∏–±–∫–∞ GigaChat: {e}"

            # self.history_compare_local.append({"role": "user", "content": user_text})
            try:
                # context_local = ""
                # for msg in self.history_compare_local:
                #     prefix = "<–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>: " if msg["role"] == "user" else "<–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç>:"
                #     context_local += f"{prefix} {msg['content']}\n"
                response_local = self.local_llm_client.ask(user_text)
                # self.history_compare_local.append({"role": "assistant", "content": response_local})
            except Exception as e:
                response_local = f"‚ùå –û—à–∏–±–∫–∞ –õ–æ–∫–∞–ª—å–Ω–æ–π LLM: {e}"

            self.append_to_history(f"ü§ñ GigaChat: {response_giga}", mode="compare")
            self.append_to_history(f"ü§ñ –õ–æ–∫–∞–ª—å–Ω–∞—è LLM: {response_local}", mode="compare")

            self.show_rating_widgets()
            self.rating_giga_rated = False
            self.rating_local_rated = False

    def show_rating_widgets(self):
        self.rating_label_giga.show()
        self.rating_widget_giga.show()
        self.rating_label_local.show()
        self.rating_widget_local.show()

    def hide_rating_widgets(self):
        self.rating_label_giga.hide()
        self.rating_widget_giga.hide()
        self.rating_label_local.hide()
        self.rating_widget_local.hide()

    def handle_rating(self, model_name: str, rating: int):
        self.append_to_history(f"‚≠ê –û—Ü–µ–Ω–∫–∞ –æ—Ç–≤–µ—Ç–∞ {model_name}: {rating}", mode="compare")

        # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –æ—Ü–µ–Ω–∫–∏
        if model_name == "gigachat":
            self.rating_giga_rated = True
            self.ratings_giga.append(rating)
            self.rating_widget_giga.hide()
            self.rating_label_giga.hide()
        elif model_name == "local":
            self.rating_local_rated = True
            self.ratings_local.append(rating)
            self.rating_widget_local.hide()
            self.rating_label_local.hide()

        # –ï—Å–ª–∏ –æ–±–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã ‚Äî —Å–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        if self.rating_giga_rated and self.rating_local_rated:
            self.hide_rating_widgets()
            self.btn_show_stats.setEnabled(True)

    def show_statistics_window(self):
        if not (self.ratings_giga or self.ratings_local):
            QMessageBox.information(self, "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "–ù–µ—Ç –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
            return

        stats_win = StatsWindow(self.ratings_giga, self.ratings_local)
        stats_win.exec()

    def end_dialog(self):
        self.history_gigachat.clear()
        self.history_local.clear()
        self.history_compare.clear()
        self.history_compare_gigachat.clear()
        self.history_compare_local.clear()
        self.chat_output.clear()
        self.current_mode = None
        self.label_mode.setText("–î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º.")
        self.hide_rating_widgets()
        self.btn_show_stats.setEnabled(False)
        # –ú–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –æ—Ü–µ–Ω–∫–∏ –∏–ª–∏ –Ω–µ –æ—á–∏—â–∞—Ç—å ‚Äî –ø–æ –∂–µ–ª–∞–Ω–∏—é
        # self.ratings_giga.clear()
        # self.ratings_local.clear()